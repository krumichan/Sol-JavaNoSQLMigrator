package jp.co.cec.vfInputDatMigrator.data;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.time.DateUtils;

import jp.co.cec.vfInputDatMigrator.constant.Constants;
import jp.co.cec.vfInputDatMigrator.dto.RawTrnStatus;
import jp.co.cec.vfInputDatMigrator.dto.TrnEvent;
import jp.co.cec.vfInputDatMigrator.util.FormatUtil;
import jp.co.cec.vfInputDatMigrator.util.TimeUtil;

public class TestData {

	public List<TrnEvent> expectedChkOk() {
		List<TrnEvent> expected = new ArrayList<TrnEvent>();
		RawTrnStatus rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("place_id");
		Date startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		Date startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		Map<Date, String> mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 05:50:52.834");
		rts.setValue("2020-01-17 05:50:52.834");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("judgment_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_OK");
		rts.setValue("CHK_OK");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 05:50:52");
		rts.setValue("2020-01-17 05:50:52");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("1110002835");
		rts.setValue("1110002835");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-24 01:49:40.575");
		rts.setValue("2020-01-24 01:49:40.575");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("judgment_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_OK");
		rts.setValue("CHK_OK");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-24 01:49:40");
		rts.setValue("2020-01-24 01:49:40");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		return expected;
	}
	
	public List<TrnEvent> expectedChkNg() {
		List<TrnEvent> res = null;
		res = expectedChkNg_Loop1();
		res.addAll(expectedChkNg_Loop2());
		res.addAll(expectedChkNg_Loop3());
		return res;
	}
	
	private List<TrnEvent> expectedChkNg_Loop1() {
		List<TrnEvent> expected = new ArrayList<TrnEvent>();
		RawTrnStatus rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("judgment_key");
		Date startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		Date startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_NG");
		rts.setValue("CHK_NG");
		Map<Date, String> mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08.037");
		rts.setValue("2020-01-15 08:30:08.037");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("外観検査-入検テスト");
		rts.setValue("外観検査-入検テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08.037");
		rts.setValue("2020-01-15 08:30:08.037");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08");
		rts.setValue("2020-01-15 08:30:08");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		return expected;
	}
	
	private List<TrnEvent> expectedChkNg_Loop2() {
		List<TrnEvent> expected = new ArrayList<TrnEvent>();
		RawTrnStatus rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("judgment_key");
		Date startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		Date startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_NG");
		rts.setValue("CHK_NG");
		Map<Date, String> mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08.037");
		rts.setValue("2020-01-15 08:30:08.037");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("外観検査-入検テスト");
		rts.setValue("外観検査-入検テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08.037");
		rts.setValue("2020-01-15 08:30:08.037");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08");
		rts.setValue("2020-01-15 08:30:08");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("judgment_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_NG");
		rts.setValue("CHK_NG");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08.037");
		rts.setValue("2020-01-15 08:30:08.037");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("外観検査-入検テスト");
		rts.setValue("外観検査-入検テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:31:57.978");
		rts.setValue("2020-01-15 08:31:57.978");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08");
		rts.setValue("2020-01-15 08:30:08");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		return expected;
	}
	
	private List<TrnEvent> expectedChkNg_Loop3() {
		List<TrnEvent> expected = new ArrayList<TrnEvent>();
		RawTrnStatus rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("judgment_key");
		Date startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		Date startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_NG");
		rts.setValue("CHK_NG");
		Map<Date, String> mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08.037");
		rts.setValue("2020-01-15 08:30:08.037");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("外観検査-入検テスト");
		rts.setValue("外観検査-入検テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:31:57.978");
		rts.setValue("2020-01-15 08:31:57.978");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08");
		rts.setValue("2020-01-15 08:30:08");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("judgment_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_NG");
		rts.setValue("CHK_NG");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08.037");
		rts.setValue("2020-01-15 08:30:08.037");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("外観検査-入検テスト");
		rts.setValue("外観検査-入検テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-16 02:27:10.237");
		rts.setValue("2020-01-16 02:27:10.237");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("テスト準備");
		rts.setValue("テスト準備");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:31:57.978");
		rts.setValue("2020-01-15 08:31:57.978");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08");
		rts.setValue("2020-01-15 08:30:08");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		return expected;
	}
	
	public List<TrnEvent> expectedOther() {
		List<TrnEvent> res = expectedOther_Loop1();
		res.addAll(expectedOther_Loop2());
		res.addAll(expectedOther_Loop3());
		return res;
	}
	
	private List<TrnEvent> expectedOther_Loop1() {
		List<TrnEvent> expected = new ArrayList<TrnEvent>();
		RawTrnStatus rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("place_id");
		Date startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		Date startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100030");
		rts.setValue("70100030");
		Map<Date, String> mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("1110002890");
		rts.setValue("1110002890");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36.820");
		rts.setValue("2020-01-17 02:08:36.820");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("endo");
		rts.setValue("endo");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("画面操作とデータ遷移テスト");
		rts.setValue("画面操作とデータ遷移テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36.820");
		rts.setValue("2020-01-17 02:08:36.820");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36");
		rts.setValue("2020-01-17 02:08:36");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		return expected;
	}
	
	private List<TrnEvent> expectedOther_Loop2() {
		List<TrnEvent> expected = new ArrayList<TrnEvent>();
		RawTrnStatus rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("place_id");
		Date startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		Date startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100030");
		rts.setValue("70100030");
		Map<Date, String> mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("1110002890");
		rts.setValue("1110002890");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36.820");
		rts.setValue("2020-01-17 02:08:36.820");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("endo");
		rts.setValue("endo");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("画面操作とデータ遷移テスト");
		rts.setValue("画面操作とデータ遷移テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36.820");
		rts.setValue("2020-01-17 02:08:36.820");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36");
		rts.setValue("2020-01-17 02:08:36");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100030");
		rts.setValue("70100030");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("1110002890");
		rts.setValue("1110002890");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36.820");
		rts.setValue("2020-01-17 02:08:36.820");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("endo");
		rts.setValue("endo");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("画面操作とデータ遷移テスト");
		rts.setValue("画面操作とデータ遷移テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:54:35.958");
		rts.setValue("2020-01-17 02:54:35.958");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36");
		rts.setValue("2020-01-17 02:08:36");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		return expected;
	}
	
	private List<TrnEvent> expectedOther_Loop3() {
		List<TrnEvent> expected = new ArrayList<TrnEvent>();
		RawTrnStatus rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("place_id");
		Date startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		Date startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100030");
		rts.setValue("70100030");
		Map<Date, String> mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("1110002890");
		rts.setValue("1110002890");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36.820");
		rts.setValue("2020-01-17 02:08:36.820");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("endo");
		rts.setValue("endo");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("画面操作とデータ遷移テスト");
		rts.setValue("画面操作とデータ遷移テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:54:35.958");
		rts.setValue("2020-01-17 02:54:35.958");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36");
		rts.setValue("2020-01-17 02:08:36");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100030");
		rts.setValue("70100030");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("1110002890");
		rts.setValue("1110002890");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36.820");
		rts.setValue("2020-01-17 02:08:36.820");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("endo");
		rts.setValue("endo");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("画面操作とデータ遷移テスト");
		rts.setValue("画面操作とデータ遷移テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 05:06:26.636");
		rts.setValue("2020-01-17 05:06:26.636");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("払出ワーク取消テスト");
		rts.setValue("払出ワーク取消テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("fujiwara");
		rts.setValue("fujiwara");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:54:35.958");
		rts.setValue("2020-01-17 02:54:35.958");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36");
		rts.setValue("2020-01-17 02:08:36");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		return expected;
	}
	
	public List<TrnEvent> expectedGetBack() {
		List<TrnEvent> res = expectedGetBack_Loop1();
		res.addAll(expectedGetBack_Loop2());
		return res;
	}
	
	private List<TrnEvent> expectedGetBack_Loop1() {
		List<TrnEvent> expected = new ArrayList<TrnEvent>();
		RawTrnStatus rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("place_id");
		Date startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		Date startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		Map<Date, String> mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 05:50:52.834");
		rts.setValue("2020-01-17 05:50:52.834");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("judgment_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_OK");
		rts.setValue("CHK_OK");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 05:50:52");
		rts.setValue("2020-01-17 05:50:52");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_1_2_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 11:50:57.156")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_1_2_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_1_2_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_1_2_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 11:50:57.156")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_1_2_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_1_2_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_1_2_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 11:50:57.156")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-16 11:50:57.156");
		rts.setValue("2020-01-16 11:50:57.156");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_1_2_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_1_2_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_1_2_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 11:50:57.156")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("GET_BACK");
		rts.setValue("GET_BACK");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_1_2_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_1_2_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_1_2_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 11:50:57.156")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_1_2_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_1_2_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_1_2_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 11:50:57.156")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-16 11:50:57");
		rts.setValue("2020-01-16 11:50:57");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_1_2_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_1_2_1_1_1");
		expected.add(new TrnEvent(rts));
		
		return expected;
	}
	
	private List<TrnEvent> expectedGetBack_Loop2() {
		List<TrnEvent> expected = new ArrayList<TrnEvent>();
		RawTrnStatus rts = new RawTrnStatus();
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("place_id");
		Date startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		Date startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		Map<Date, String> mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("1110002835");
		rts.setValue("1110002835");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-24 01:49:40.575");
		rts.setValue("2020-01-24 01:49:40.575");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("judgment_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_OK");
		rts.setValue("CHK_OK");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-24 01:49:40");
		rts.setValue("2020-01-24 01:49:40");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		return expected;
	}
	
	public List<TrnEvent> expectedInsertChkOk() {
		List<TrnEvent> expected = new ArrayList<TrnEvent>();
		RawTrnStatus rts = new RawTrnStatus();
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("created_at");
		Date startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		Date startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 05:50:52");
		rts.setValue("2020-01-17 05:50:52");
		Map<Date, String> mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 05:50:52.834");
		rts.setValue("2020-01-17 05:50:52.834");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("judgment_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_OK");
		rts.setValue("CHK_OK");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:50:52.834")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		
		rts = new RawTrnStatus();
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-24 01:49:40");
		rts.setValue("2020-01-24 01:49:40");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-24 01:49:40.575");
		rts.setValue("2020-01-24 01:49:40.575");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("judgment_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_OK");
		rts.setValue("CHK_OK");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_4_8_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-24 01:49:40.575")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("1110002835");
		rts.setValue("1110002835");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_4_8_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_4_8_1_1_1");
		expected.add(new TrnEvent(rts));
		
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_1_2_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 11:50:57.156")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-16 11:50:57");
		rts.setValue("2020-01-16 11:50:57");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_1_2_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_1_2_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_1_2_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 11:50:57.156")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_1_2_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_1_2_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_1_2_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 11:50:57.156")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-16 11:50:57.156");
		rts.setValue("2020-01-16 11:50:57.156");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_1_2_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_1_2_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_1_2_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 11:50:57.156")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_1_2_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_1_2_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_1_2_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 11:50:57.156")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_1_2_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_1_2_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_1_2_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 11:50:57.156")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("GET_BACK");
		rts.setValue("GET_BACK");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_1_2_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_1_2_1_1_1");
		expected.add(new TrnEvent(rts));
		
		return expected;
	}
	
	public List<TrnEvent> expectedInsertChkNg() {
		List<TrnEvent> expected = new ArrayList<TrnEvent>();
		RawTrnStatus rts = new RawTrnStatus();
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_date_time");
		Date startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		Date startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-16 02:27:10.237");
		rts.setValue("2020-01-16 02:27:10.237");
		Map<Date, String> mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("テスト準備");
		rts.setValue("テスト準備");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08");
		rts.setValue("2020-01-15 08:30:08");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08.037");
		rts.setValue("2020-01-15 08:30:08.037");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:31:57.978");
		rts.setValue("2020-01-15 08:31:57.978");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("judgment_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_NG");
		rts.setValue("CHK_NG");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("外観検査-入検テスト");
		rts.setValue("外観検査-入検テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-16 02:27:10.237")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08");
		rts.setValue("2020-01-15 08:30:08");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08");
		rts.setValue("2020-01-15 08:30:08");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08.037");
		rts.setValue("2020-01-15 08:30:08.037");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08.037");
		rts.setValue("2020-01-15 08:30:08.037");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:30:08.037");
		rts.setValue("2020-01-15 08:30:08.037");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-15 08:31:57.978");
		rts.setValue("2020-01-15 08:31:57.978");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("judgment_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_NG");
		rts.setValue("CHK_NG");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("judgment_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("CHK_NG");
		rts.setValue("CHK_NG");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("外観検査-入検テスト");
		rts.setValue("外観検査-入検テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("外観検査-入検テスト");
		rts.setValue("外観検査-入検テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100999");
		rts.setValue("70100999");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("IT00000051");
		rts.setValue("IT00000051");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:30:08.037")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_3_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-15 08:31:57.978")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_3_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_3_3_1_1_1");
		expected.add(new TrnEvent(rts));

		return expected;
	}

	public List<TrnEvent> expectedInsertOther() {
		List<TrnEvent> expected = new ArrayList<TrnEvent>();
		RawTrnStatus rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_date_time");
		Date startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		Date startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 05:06:26.636");
		rts.setValue("2020-01-17 05:06:26.636");
		Map<Date, String> mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("払出ワーク取消テスト");
		rts.setValue("払出ワーク取消テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("cancel_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("fujiwara");
		rts.setValue("fujiwara");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36");
		rts.setValue("2020-01-17 02:08:36");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36");
		rts.setValue("2020-01-17 02:08:36");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36");
		rts.setValue("2020-01-17 02:08:36");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("created_by");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("testadmin");
		rts.setValue("testadmin");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36.820");
		rts.setValue("2020-01-17 02:08:36.820");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36.820");
		rts.setValue("2020-01-17 02:08:36.820");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_date_time");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36.820");
		rts.setValue("2020-01-17 02:08:36.820");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("endo");
		rts.setValue("endo");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("endo");
		rts.setValue("endo");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("entry_worker");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("endo");
		rts.setValue("endo");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("FALSE");
		rts.setValue("FALSE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_flg");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("TRUE");
		rts.setValue("TRUE");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:08:36.820");
		rts.setValue("2020-01-17 02:08:36.820");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:54:35.958");
		rts.setValue("2020-01-17 02:54:35.958");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("inspection_updated_at");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("2020-01-17 02:54:35.958");
		rts.setValue("2020-01-17 02:54:35.958");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("画面操作とデータ遷移テスト");
		rts.setValue("画面操作とデータ遷移テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("画面操作とデータ遷移テスト");
		rts.setValue("画面操作とデータ遷移テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("note");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("画面操作とデータ遷移テスト");
		rts.setValue("画面操作とデータ遷移テスト");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100030");
		rts.setValue("70100030");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100030");
		rts.setValue("70100030");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("place_id");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("70100030");
		rts.setValue("70100030");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("1110002890");
		rts.setValue("1110002890");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("1110002890");
		rts.setValue("1110002890");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("serial_number");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("1110002890");
		rts.setValue("1110002890");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("status_reason_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("その他");
		rts.setValue("その他");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:08:36.820")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 02:54:35.958")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		rts = new RawTrnStatus();
		rts.setLogId("log_id_1_1_2_3_1");
		rts.setSubject("work_status_key");
		startTime = TimeUtil.dttmToDateTime(FormatUtil.formatDateToStringSlashAndUnder3(Timestamp.valueOf("2020-01-17 05:06:26.636")));
		startDate = DateUtils.truncate(startTime, Calendar.DAY_OF_MONTH);
		rts.setLogDateTime(startTime);
		rts.setLogDate(startDate);
		rts.setLogEndDateTime(null);
		rts.setValueKey("INSPECTION");
		rts.setValue("INSPECTION");
		mapValue = new HashMap<Date, String>();
		mapValue.put(startDate, "log_id_1_1_2_3_1");
		rts.setMapValue(mapValue);
		rts.setUpdatedBy(Constants.APPLICATION_NAME);
		rts.setSignalId("signal_id_1_1_2_3_1_1_1");
		expected.add(new TrnEvent(rts));
		
		return expected;		
	}
	
	public Map<String, List<Timestamp>> deleteGetBack() {
		Map<String, List<Timestamp>> expected = new HashMap<String, List<Timestamp>>();
		expected.put("is_loop0", (List<Timestamp>) Arrays.asList(new Timestamp[] { Timestamp.valueOf("2020-01-24 10:49:40.575185") }));
		expected.put("ivi_loop0", (List<Timestamp>) Arrays.asList(new Timestamp[] { Timestamp.valueOf("2020-01-24 10:49:40.575185") }));
		expected.put("iws_loop0", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		
		expected.put("is_loop1", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		expected.put("ivi_loop1", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		expected.put("iws_loop1", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		
		return expected;
	}
	
	public Map<String, List<Timestamp>> deleteNg() {
		Map<String, List<Timestamp>> expected = new HashMap<String, List<Timestamp>>();
		expected.put("is_loop0", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		expected.put("ivi_loop0", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		expected.put("iws_loop0", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		
		expected.put("is_loop1", (List<Timestamp>) Arrays.asList(new Timestamp[] { Timestamp.valueOf("2020-01-15 17:30:08.038722"), Timestamp.valueOf("2020-01-15 17:31:57.980317"), Timestamp.valueOf("2020-01-16 11:27:10.238176") }));
		expected.put("ivi_loop1", (List<Timestamp>) Arrays.asList(new Timestamp[] { Timestamp.valueOf("2020-01-15 17:30:08.038722") }));
		expected.put("iws_loop1", (List<Timestamp>) Arrays.asList(new Timestamp[] { Timestamp.valueOf("2020-01-15 17:31:57.980317"), Timestamp.valueOf("2020-01-15 17:31:57.980317"), Timestamp.valueOf("2020-01-16 11:27:10.238176"), Timestamp.valueOf("2020-01-16 11:27:10.238176") }));
		
		expected.put("is_loop2", (List<Timestamp>) Arrays.asList(new Timestamp[] { Timestamp.valueOf("2020-01-15 17:30:08.038722"), Timestamp.valueOf("2020-01-16 11:27:10.238176") }));
		expected.put("ivi_loop2", (List<Timestamp>) Arrays.asList(new Timestamp[] { Timestamp.valueOf("2020-01-15 17:30:08.038722") }));
		expected.put("iws_loop2", (List<Timestamp>) Arrays.asList(new Timestamp[] { Timestamp.valueOf("2020-01-16 11:27:10.238176"), Timestamp.valueOf("2020-01-16 11:27:10.238176") }));
		
		expected.put("is_loop3", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		expected.put("ivi_loop3", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		expected.put("iws_loop3", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		
		return expected;
	}
	
	public Map<String, List<Timestamp>> deleteOther() {
		Map<String, List<Timestamp>> expected = new HashMap<String, List<Timestamp>>();
		expected.put("is_loop0", (List<Timestamp>) Arrays.asList(new Timestamp[] { Timestamp.valueOf("2020-01-17 11:54:35.961737"), Timestamp.valueOf("2020-01-17 14:06:26.637510") }));
		expected.put("ivi_loop0", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		expected.put("iws_loop0", (List<Timestamp>) Arrays.asList(new Timestamp[] { Timestamp.valueOf("2020-01-17 11:54:35.961737"), Timestamp.valueOf("2020-01-17 11:54:35.961737"), Timestamp.valueOf("2020-01-17 14:06:26.637510"), Timestamp.valueOf("2020-01-17 14:06:26.637510") }));
		
		expected.put("is_loop1", (List<Timestamp>) Arrays.asList(new Timestamp[] { Timestamp.valueOf("2020-01-17 14:06:26.637510") }));
		expected.put("ivi_loop1", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		expected.put("iws_loop1", (List<Timestamp>) Arrays.asList(new Timestamp[] { Timestamp.valueOf("2020-01-17 14:06:26.637510"), Timestamp.valueOf("2020-01-17 14:06:26.637510") }));
		
		expected.put("is_loop2", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		expected.put("ivi_loop2", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		expected.put("iws_loop2", (List<Timestamp>) Arrays.asList(new Timestamp[] {  }));
		
		return expected;
	}
}